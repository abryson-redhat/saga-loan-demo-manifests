apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loan-demo-model
    app.kubernetes.io/component: loan-demo-model
    app.kubernetes.io/instance: loan-demo-model
    app.kubernetes.io/name: loan-demo-model
    app.kubernetes.io/part-of: loan-demo-model-app
  name: loan-demo-model
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: loan-demo-model
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loan-demo-model
        deployment: loan-demo-model
    spec:
      containers:
      - env:
        - name: SPRING_CONFIG_LOCATION
          value: "file:///app/application.yaml"
        image: quay.io/abryson/loan-demo-model:0.0.1-SNAPSHOT_8518810
        imagePullPolicy: Always
        name: loan-demo-model
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: 
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        volumeMounts:
        - name: loan-demo-model
          mountPath: /app/application.yaml
          subPath: application.yaml
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      initContainers:
      - name: psql-client-container
        image: quay.io/abryson/psql-client-amd64-alpine:latest
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: init-db-auth
              key: PGPASSWORD
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: init-db-auth
              key: PGUSER
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              name: init-db-auth
              key: PGHOST
        - name: PGPORT
          valueFrom:
            secretKeyRef:
              name: init-db-auth
              key: PGPORT
        command: ['bash', '-c', 'psql < /temp/user.sql && psql -d sagademo < /temp/schema.sql && psql -d sagademo < /temp/data.sql']
        volumeMounts:
          - name: db-user-volume
            mountPath: /temp
            readOnly: true
          - name: loan-demo-model
            mountPath: /app/application.yaml
            subPath: application.yaml            
      volumes:
        - name: db-user-volume
          secret:
            secretName: init-db-secret
        - name: loan-demo-model
          configMap:
            name: loan-demo-model           
      imagePullSecrets:
        - name: quayio
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler